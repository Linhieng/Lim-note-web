import{_ as a,c as s,o as e,a2 as i}from"./chunks/framework.pPPfHAGV.js";const u=JSON.parse('{"title":"webpack 使用","description":"","frontmatter":{},"headers":[],"relativePath":"docs/webpack/README.md","filePath":"docs/webpack/README.md"}'),t={name:"docs/webpack/README.md"},n=i(`<h1 id="webpack-使用" tabindex="-1">webpack 使用 <a class="header-anchor" href="#webpack-使用" aria-label="Permalink to &quot;webpack 使用&quot;">​</a></h1><h2 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h2><ul><li><code>resolve</code> 模块解析，即解析 require 或 import 中的路径。具体查看<a href="https://www.webpackjs.com/concepts/module-resolution" target="_blank" rel="noreferrer">文档</a></li><li><code>externals</code> 排除外部依赖。意思是这里面声明的依赖将会在运行时获取，不需要打包。具体可参考<a href="https://www.webpackjs.com/configuration/externals/" target="_blank" rel="noreferrer">文档</a></li><li><code>output.library</code> 告诉 webpack 输出的文件是一个库，而不是可执行文件。具体可参考<a href="https://www.webpackjs.com/configuration/output/#outputlibrary" target="_blank" rel="noreferrer">文档</a></li></ul><h2 id="解决报错" tabindex="-1">解决报错 <a class="header-anchor" href="#解决报错" aria-label="Permalink to &quot;解决报错&quot;">​</a></h2><ul><li><p>使用 vue-cli 时阻止 webpack 的报错信息直接显示在页面上</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vue.config.js</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    devServer: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        client: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            overlay: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li></ul>`,5),l=[n];function p(r,h,o,c,k,d){return e(),s("div",null,l)}const _=a(t,[["render",p]]);export{u as __pageData,_ as default};
