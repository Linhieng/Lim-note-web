import{_ as s,c as i,o as a,a2 as t}from"./chunks/framework.pPPfHAGV.js";const F=JSON.parse('{"title":"流程管理","description":"","frontmatter":{},"headers":[],"relativePath":"docs/流程管理/README.md","filePath":"docs/流程管理/README.md"}'),e={name:"docs/流程管理/README.md"},n=t(`<h1 id="流程管理" tabindex="-1">流程管理 <a class="header-anchor" href="#流程管理" aria-label="Permalink to &quot;流程管理&quot;">​</a></h1><ul><li><a href="https://typicode.github.io/husky/getting-started.html" target="_blank" rel="noreferrer">husky</a>: git hook</li><li><a href="https://github.com/okonet/lint-staged" target="_blank" rel="noreferrer">lint-staged</a>: 搭配 husky 使用，只对 commit 的文件进行处理。</li><li>commitlint</li><li>eslint</li><li>prettier</li><li>markdownlint</li><li><a href="https://www.npmjs.com/package/commitizen" target="_blank" rel="noreferrer">commitizen</a>: 可选，这是一个命令行交互工具</li></ul><h2 id="husky" tabindex="-1">husky <a class="header-anchor" href="#husky" aria-label="Permalink to &quot;husky&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> husky-init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># npx husky-init &amp;&amp; npm install</span></span></code></pre></div><p>或</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> husky</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scripts.prepare=&quot;husky install&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prepare</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> husky</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .husky/pre-commit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;npm test&quot;</span></span></code></pre></div><blockquote><p>为什么 husky 需要 <code>&quot;prepare&quot;: &quot;husky install&quot;</code></p><p><code>prepare</code> 是 npm 生命周期中的一个阶段，当执行 <code>npm install</code> 时会自动运行该脚本。当别人拉取仓库时，第一件事一般就是 <code>npm i</code>，如果没有 <code>prepare</code> 脚本，那么新手可能根本不知道还有执行 <code>husky install</code>，这样一来，husky 中定义的脚本对他们来说就形容虚设。</p><p>更多信息可查看 <a href="https://docs.npmjs.com/cli/v7/using-npm/scripts#life-cycle-scripts" target="_blank" rel="noreferrer">script 的生命周期</a></p></blockquote><h2 id="lint-staged" tabindex="-1">lint-staged <a class="header-anchor" href="#lint-staged" aria-label="Permalink to &quot;lint-staged&quot;">​</a></h2><ol><li><p>安装</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lint-staged</span></span></code></pre></div></li><li><p>添加到 husky</p><p>将 <code>.husky\\pre-commit</code> 中的 <code>npm test</code> 替换成 <code>npx lint-staged</code>，或者执行 <code>npx husky add .husky/pre-commit &quot;npx lint-staged&quot;</code></p></li><li><p>配置</p><p>有以下几种配置方式：</p><ul><li>在 <code>package.json</code> 中配置 <code>lint-staged</code></li><li>使用 <code>.lintstagedrc</code> 文件（可以是 json 或 yml 格式）</li><li>使用 <code>.lintstagedrc.mjs</code> 或 <code>lint-staged.config.mjs</code> 文件（ESM 格式 <code>export default { ... }</code>）。</li><li>使用 <code>.lintstagedrc.cjs</code> 或 <code>lint-staged.config.cjs</code> 文件（CommonJS 格式 <code>module.exports = { ... }</code> ）。</li><li>使用 <code>.lintstagedrc.js</code> 或 <code>lint-staged.config.js</code> 文件（格式取决于 <code>package.json</code> 中的 <code>&quot;type&quot;: &quot;module&quot;</code>）。</li><li>通过 <code>-c</code> 或 <code>--config</code> 指定配置文件。</li></ul></li></ol><h2 id="commitlint" tabindex="-1">commitlint <a class="header-anchor" href="#commitlint" aria-label="Permalink to &quot;commitlint&quot;">​</a></h2><ol><li><p>安装</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @commitlint/config-conventional</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @commitlint/cli</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;module.exports = { extends: [&#39;@commitlint/config-conventional&#39;] };&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commitlint.config.js</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @commitlint/config-conventional 是官方提供的配置规则</span></span></code></pre></div></li><li><p>配置</p><p>有以下几种配置方式：</p><ul><li>在 <code>package.json</code> 中配置 <code>commitlint</code></li><li><code>.commitlintrc</code></li><li><code>.commitlintrc.js</code></li><li><code>.commitlintrc.yml</code></li><li><code>.commitlintrc.json</code></li><li><code>commitlint.config.js</code></li></ul></li><li><p>添加到 husky 中</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> husky</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .husky/commit-msg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;npx --no -- commitlint --edit \${1}&#39;</span></span></code></pre></div><p>或</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scripts.commitlint=&quot;commitlint --edit&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> husky</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .husky/commit-msg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;npm run commitlint \${1}&#39;</span></span></code></pre></div></li></ol><h2 id="eslint" tabindex="-1">eslint <a class="header-anchor" href="#eslint" aria-label="Permalink to &quot;eslint&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @eslint/config</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建配置文件</span></span></code></pre></div><h2 id="prettier" tabindex="-1">prettier <a class="header-anchor" href="#prettier" aria-label="Permalink to &quot;prettier&quot;">​</a></h2><ol><li><p>安装</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-exact</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prettier</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint-config-prettier</span></span></code></pre></div></li><li><p>配置</p><p>prettier 支持的配置方式有：</p><ul><li>在 <code>package.json</code> 中配置 <code>prettier</code></li><li><code>.prettierrc</code> 文件（格式为 JSON 或 YAML）</li><li><code>.prettierrc.(json|yml|yaml|json5)</code></li><li><code>.prettierrc.js</code> 或 <code>prettier.config.js</code></li><li><code>.prettierrc.mjs</code> 或 <code>prettier.config.mjs</code></li><li><code>.prettierrc.cjs</code> 或 <code>prettier.config.cjs</code></li><li><code>.prettierrc.toml</code></li></ul><p><code>eslint-config-prettier</code> 的作用是关闭 eslint 中和 prettier 冲突的配置项，使用方法是：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;extends&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /* ... */</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;prettier&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><h2 id="markdownlint" tabindex="-1">markdownlint <a class="header-anchor" href="#markdownlint" aria-label="Permalink to &quot;markdownlint&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> markdownlint-cli2</span></span></code></pre></div><p>创建 <code>.markdownlint-cli2.jsonc</code> 文件</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;config&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;MD007&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;indent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,19),l=[n];function p(h,o,d,k,c,r){return a(),i("div",null,l)}const u=s(e,[["render",p]]);export{F as __pageData,u as default};
