import{_ as o,c as e,o as t,a2 as c}from"./chunks/framework.pPPfHAGV.js";const f=JSON.parse('{"title":"tsconfig.json","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Typescript/配置文件.md","filePath":"docs/Typescript/配置文件.md"}'),d={name:"docs/Typescript/配置文件.md"},i=c('<h1 id="tsconfig-json" tabindex="-1">tsconfig.json <a class="header-anchor" href="#tsconfig-json" aria-label="Permalink to &quot;tsconfig.json&quot;">​</a></h1><h2 id="compileroptions" tabindex="-1"><code>compilerOptions</code> <a class="header-anchor" href="#compileroptions" aria-label="Permalink to &quot;`compilerOptions`&quot;">​</a></h2><ul><li><p><code>noErrorTruncation</code></p><ul><li>默认为 <code>false</code>，当报错信息过长时，默认会省略一些内容。</li><li>设置为 <code>true</code> 可以显示完整的报错信息。</li></ul></li><li><p><code>jsx</code></p><ul><li><code>preset</code></li></ul></li><li><p><code>esModuleInterop</code></p><ul><li>设置为 <code>true</code> 时，<code>import * as moment from &quot;moment&quot;</code> 会被编译成 <code>const moment = require(&quot;moment&quot;)</code>；而 <code>import moment from &quot;moment&quot;</code> 会被编译成 <code>const moment = require(&quot;moment&quot;).default</code>。这会带来一个问题！如果 <code>moment</code> 中并没有 default，则会报错！比如 <code>express-openapi-validator@5.0.6</code> 中并没有 default 导出，所以只能通过 <code>import * as OpenApiValidator</code> 的方式导入。</li></ul></li><li><p><code>moduleDetection</code></p><ul><li>设置为 <code>force</code>，强制将每一个 ts 文件识别为模块，相当于自动添加 <code>export {}</code>，从而解决 <code>Cannot redeclare block-scoped variable &#39;xx&#39;</code> 问题。</li></ul></li></ul>',3),r=[i];function a(l,n,s,p,m,u){return t(),e("div",null,r)}const h=o(d,[["render",a]]);export{f as __pageData,h as default};
