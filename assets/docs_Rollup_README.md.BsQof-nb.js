import{_ as o,c as e,o as l,a2 as a}from"./chunks/framework.pPPfHAGV.js";const m=JSON.parse('{"title":"Rollup","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Rollup/README.md","filePath":"docs/Rollup/README.md"}'),r={name:"docs/Rollup/README.md"},t=a('<h1 id="rollup" tabindex="-1">Rollup <a class="header-anchor" href="#rollup" aria-label="Permalink to &quot;Rollup&quot;">​</a></h1><p>不仅仅是 rollup，各种打包构建工具，最重要的基本都是配置插件。学习构建，其实就是在学习插件的使用。<a href="https://github.com/rollup/awesome" target="_blank" rel="noreferrer">点击查看 rollup 插件列表</a></p><h2 id="目前我使用过的插件" tabindex="-1">目前我使用过的插件 <a class="header-anchor" href="#目前我使用过的插件" aria-label="Permalink to &quot;目前我使用过的插件&quot;">​</a></h2><ul><li><code>@rollup/plugin-json</code> 处理 json</li><li><code>@rollup/plugin-terser</code> 最小化代码</li><li><code>@rollup/plugin-node-resolve</code> 解析模块（外部依赖）的路径（node_modules）</li><li><code>@rollup/plugin-commonjs</code> 将 CommonJS 转换为 ES 模块</li></ul>',4),c=[t];function n(s,i,d,p,u,_){return l(),e("div",null,c)}const f=o(r,[["render",n]]);export{m as __pageData,f as default};
